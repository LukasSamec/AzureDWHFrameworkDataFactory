{
	"name": "Main",
	"properties": {
		"activities": [
			{
				"name": "WriteETLLog",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[log].[p_WriteETLLog]",
						"storedProcedureParameters": {
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"PipelineRunId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineTriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"PipelineTriggerTime": {
								"type": "DateTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "Int32",
								"value": "1"
							},
							"StatusDescription": {
								"type": "String",
								"value": "Running"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dtsStageMapping",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "AssignETLLogIDToVariable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "WriteETLLog",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ETLLogID",
					"value": {
						"value": "@string(activity('WriteETLLog').output.firstRow.SCOPE_IDENTITY)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetETLStatus",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LoadAll",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[log].[p_GetLogStatus]",
						"storedProcedureParameters": {
							"ETLLogID": {
								"type": "Int32",
								"value": {
									"value": "@variables('ETLLogID')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dtsDwhMapping",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LoadAll",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "AssignETLLogIDToVariable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "LoadAll",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ETLLogID": {
							"value": "@variables('ETLLogID')",
							"type": "Expression"
						},
						"Area": {
							"value": "@pipeline().parameters.Area",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LogETLStatus",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "GetETLStatus",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('GetETLStatus').output.firstRow.logStatus",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Failed",
							"activities": [
								{
									"name": "LogError",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[log].[p_UpdateETLLog]",
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@variables('ETLLogID')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "3",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Failed",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "Success",
							"activities": [
								{
									"name": "LogSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[log].[p_UpdateETLLog]",
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@variables('ETLLogID')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "2",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Finished",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"Area": {
				"type": "string",
				"defaultValue": "All"
			}
		},
		"variables": {
			"ETLLogID": {
				"type": "String"
			}
		},
		"annotations": []
	}
}