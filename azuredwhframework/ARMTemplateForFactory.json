{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azuredwhframework"
		},
		"CSVSource_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'CSVSource'"
		},
		"DWH_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DWH'"
		},
		"OnPremiseSQLSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremiseSQLSource'",
			"defaultValue": "Integrated Security=True;Data Source=LAPTOP-NBJCJG95;Initial Catalog=AdventureWorks2019"
		},
		"OnPremiseSQLSource_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremiseSQLSource'"
		},
		"CSVSource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://filesources.dfs.core.windows.net/"
		},
		"OnPremiseSQLSource_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "LAPTOP-NBJCJG95\\lukas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadDwh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLayers",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetDwhLayers]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsDwhMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LoadDwhLayers",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetLayers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetLayers').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LoadDwhLayer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LoadDwhLayer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Layer": {
												"value": "@item().Layer",
												"type": "Expression"
											},
											"Area": {
												"value": "@pipeline().parameters.Area",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETLLogID": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Area": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"variables": {
					"ETLLog_SK": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Dwh"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-03T15:22:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsDwhMapping')]",
				"[concat(variables('factoryId'), '/pipelines/LoadDwhLayer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadDwhLayer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "Get Dimension Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetDwhMapping]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"Layer": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Layer",
											"type": "Expression"
										}
									},
									"TableType": {
										"type": "String",
										"value": "Dimension"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsDwhMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Dimension Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Dimension Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dimension Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Dimension Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().LoadingProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@int(pipeline().parameters.ETLLogID)",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Fact Tables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Dimension Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetDwhMapping]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"Layer": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Layer",
											"type": "Expression"
										}
									},
									"TableType": {
										"type": "String",
										"value": "Fact"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsDwhMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Fact Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Fact Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Fact Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Fact Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().LoadingProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@int(pipeline().parameters.ETLLogID)",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Layer": {
						"type": "string",
						"defaultValue": "1"
					},
					"Area": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"ETLLogID": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Dwh"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-03T15:22:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsDwhMapping')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadStage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadStageOnPremiseSQL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadStageOnPremiseSQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ETLLogID": {
									"value": "@pipeline().parameters.ETLLogID",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LoadStageCSV",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadStageCSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ETLLogID": {
									"value": "@pipeline().parameters.ETLLogID",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETLLogID": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LoadStageOnPremiseSQL')]",
				"[concat(variables('factoryId'), '/pipelines/LoadStageCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadStageCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetStageMapping",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetStageMapping]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"SourceDataset": {
										"type": "String",
										"value": "dtsCSVFile"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsStageMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LoadToStage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetStageMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetStageMapping').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Stage Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetColumnMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "InsertedETLLogID",
													"value": {
														"value": "@pipeline().parameters.ETLLogID",
														"type": "Expression"
													}
												},
												{
													"name": "UpdatedETLLogID",
													"value": {
														"value": "@pipeline().parameters.ETLLogID",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{item().ClearTargetTableQuery}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "AddressID",
														"type": "String"
													},
													"sink": {
														"name": "AddressID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AddressLine1",
														"type": "String"
													},
													"sink": {
														"name": "AddressLine1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AddressLine2",
														"type": "String"
													},
													"sink": {
														"name": "AddressLine2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "City",
														"type": "String"
													},
													"sink": {
														"name": "City",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InsertedETLLogID",
														"type": "String"
													},
													"sink": {
														"name": "InsertedETLLogID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UpdatedETLLogID",
														"type": "String"
													},
													"sink": {
														"name": "UpdatedETLLogID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "dtsCSVFile",
											"type": "DatasetReference",
											"parameters": {
												"FileSystem": "csvsource",
												"Directory": {
													"value": "@item().SourceSchema",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dtsDwhStage",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().TargetSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TargetTable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LogSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load Stage Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": {
													"value": "@activity('Load Stage Table').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "2",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Finished",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "WriteETLTableLoadLogID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[log].[p_WriteETLTableLoadLog]",
											"storedProcedureParameters": {
												"ETLLogID": {
													"type": "Int32",
													"value": {
														"value": "@int(pipeline().parameters.ETLLogID)",
														"type": "Expression"
													}
												},
												"Name": {
													"type": "String",
													"value": {
														"value": "@concat(item().TargetSchema,'.',item().TargetTable)",
														"type": "Expression"
													}
												},
												"NewETLTableLoadLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "Int32",
													"value": "1"
												},
												"StatusDescription": {
													"type": "String",
													"value": "Running"
												},
												"Type": {
													"type": "String",
													"value": "Copy Data"
												},
												"TargetTableName": {
													"type": "String",
													"value": {
														"value": "@item().TargetTable",
														"type": "Expression"
													}
												},
												"TargetSchemaName": {
													"type": "String",
													"value": {
														"value": "@item().TargetSchema",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dtsStageMapping",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "LogError",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load Stage Table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": "0",
												"type": "Int32"
											},
											"Status": {
												"value": "3",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Error",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "GetColumnMapping",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "WriteETLTableLoadLogID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[etl].[p_GetColumnMapping]",
											"storedProcedureParameters": {
												"SchemaName": {
													"type": "String",
													"value": {
														"value": "@item().TargetSchema",
														"type": "Expression"
													}
												},
												"TableName": {
													"type": "String",
													"value": {
														"value": "@item().TargetTable",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dtsStageMapping",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETLLogID": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Area": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"variables": {
					"Throw error": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Stage/CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-03T15:22:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsStageMapping')]",
				"[concat(variables('factoryId'), '/datasets/dtsCSVFile')]",
				"[concat(variables('factoryId'), '/datasets/dtsDwhStage')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadStageOnPremiseSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetStageMapping",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetStageMapping]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"SourceDataset": {
										"type": "String",
										"value": "dtsOnPremiseSQL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsStageMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LoadToStage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetStageMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetStageMapping').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Stage Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WriteETLTableLoadLogID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "InsertedETLLogID",
													"value": {
														"value": "@pipeline().parameters.ETLLogID",
														"type": "Expression"
													}
												},
												{
													"name": "UpdatedETLLogID",
													"value": {
														"value": "@pipeline().parameters.ETLLogID",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().SelectQuery",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{item().ClearTargetTableQuery}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dtsOnPremiseSQL",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SourceSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dtsDwhStage",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().TargetSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TargetTable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "WriteETLTableLoadLogID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[log].[p_WriteETLTableLoadLog]",
											"storedProcedureParameters": {
												"ETLLogID": {
													"type": "Int32",
													"value": {
														"value": "@int(pipeline().parameters.ETLLogID)",
														"type": "Expression"
													}
												},
												"Name": {
													"type": "String",
													"value": {
														"value": "@concat(item().TargetSchema,'.',item().TargetTable)",
														"type": "Expression"
													}
												},
												"NewTableLoadLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "Int32",
													"value": "1"
												},
												"StatusDescription": {
													"type": "String",
													"value": "Running"
												},
												"Type": {
													"type": "String",
													"value": "Copy Data"
												},
												"TargetTableName": {
													"type": "String",
													"value": {
														"value": "@item().TargetTable",
														"type": "Expression"
													}
												},
												"TargetSchemaName": {
													"type": "String",
													"value": {
														"value": "@item().TargetSchema",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dtsStageMapping",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "LogSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load Stage Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": {
													"value": "@activity('Load Stage Table').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "2",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Finished",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LogError",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load Stage Table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": "0",
												"type": "Int32"
											},
											"Status": {
												"value": "3",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Error",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETLLogID": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Area": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"variables": {
					"Throw error": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Stage/OnPremiseSQL"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-03T15:22:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsStageMapping')]",
				"[concat(variables('factoryId'), '/datasets/dtsOnPremiseSQL')]",
				"[concat(variables('factoryId'), '/datasets/dtsDwhStage')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load DWH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadDwh",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ETLLogID": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LoadStage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssignETLLogIDToVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LoadStage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ETLLogID": {
									"value": "@variables('ETLLogID')",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WriteETLLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[log].[p_WriteETLLog]",
								"storedProcedureParameters": {
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineTriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"PipelineTriggerTime": {
										"type": "DateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "Int32",
										"value": "1"
									},
									"StatusDescription": {
										"type": "String",
										"value": "Running"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsStageMapping",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "AssignETLLogIDToVariable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WriteETLLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ETLLogID",
							"value": {
								"value": "@string(activity('WriteETLLog').output.firstRow.SCOPE_IDENTITY)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ProcessAnalyticalDatabases",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DWH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessModels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "GetETLStatus",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ProcessAnalyticalDatabases",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[log].[p_GetLogStatus]",
								"storedProcedureParameters": {
									"ETLLogID": {
										"type": "Int32",
										"value": {
											"value": "@variables('ETLLogID')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsDwhMapping",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetETLStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetETLStatus').output.firstRow.logStatus, 1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Stored procedure1_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLLog]",
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@variables('ETLLogID')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "3",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Error",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLLog]",
										"storedProcedureParameters": {
											"ETLLogID": {
												"value": {
													"value": "@variables('ETLLogID')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "2",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Success",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Area": {
						"type": "string",
						"defaultValue": "All"
					}
				},
				"variables": {
					"ETLLogID": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LoadDwh')]",
				"[concat(variables('factoryId'), '/pipelines/LoadStage')]",
				"[concat(variables('factoryId'), '/datasets/dtsStageMapping')]",
				"[concat(variables('factoryId'), '/pipelines/ProcessModels')]",
				"[concat(variables('factoryId'), '/datasets/dtsDwhMapping')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessModel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilRefreshComplete",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "FilterToCurrentRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('GetAzureASRefreshStatus').output.status,'inProgress'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetAzureASRefreshStatus",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait30Seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes/',activity('FilterToCurrentRefresh').output.Value[0].refreshId)",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://*.asazure.windows.net"
										}
									}
								},
								{
									"name": "Wait30Seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "StartProcessingAzureAS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "WriteETLTableLoadLogID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "IfFailed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "UntilRefreshComplete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetAzureASRefreshStatus').output.status,'failed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LogSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": "0",
												"type": "Int32"
											},
											"Status": {
												"value": "2",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Finished",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "LogError",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[p_UpdateETLTableLoadLog]",
										"storedProcedureParameters": {
											"Deleted": {
												"value": "0",
												"type": "Int32"
											},
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"ETLTableLoadLogID": {
												"value": {
													"value": "@int(activity('WriteETLTableLoadLogID').output.firstRow.SCOPE_IDENTITY)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Inserted": {
												"value": "0",
												"type": "Int32"
											},
											"Status": {
												"value": "3",
												"type": "Int32"
											},
											"StatusDescription": {
												"value": "Error",
												"type": "String"
											},
											"Updated": {
												"value": "0",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "GetAzureASRefreshes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StartProcessingAzureAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "FilterToCurrentRefresh",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetAzureASRefreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('GetAzureASRefreshes').output.Response)",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item().startTime,addseconds(activity('StartProcessingAzureAS').output.startTime,-30))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "WriteETLTableLoadLogID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[log].[p_WriteETLTableLoadLog]",
								"storedProcedureParameters": {
									"ETLLogID": {
										"type": "Int32",
										"value": {
											"value": "@int(pipeline().parameters.ETLLogID)",
											"type": "Expression"
										}
									},
									"Name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DatabaseName",
											"type": "Expression"
										}
									},
									"NewETLTableLoadLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "Int32",
										"value": "1"
									},
									"StatusDescription": {
										"type": "String",
										"value": "Running"
									},
									"Type": {
										"type": "String",
										"value": "Process"
									},
									"TargetTableName": {
										"type": "String",
										"value": null
									},
									"TargetSchemaName": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsStageMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TenantID": {
						"type": "String",
						"defaultValue": "6e0a5f83-1728-4956-bdf4-ce37760cd214"
					},
					"SubscriptionID": {
						"type": "String",
						"defaultValue": "c87e9a49-c82c-4d59-ba82-f4a80d29bb92"
					},
					"Region": {
						"type": "String",
						"defaultValue": "westeurope"
					},
					"Server": {
						"type": "String",
						"defaultValue": "azuredwhframework"
					},
					"DatabaseName": {
						"type": "String",
						"defaultValue": "AAS_Sales"
					},
					"ETLLogID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure AS"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-03T15:22:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsStageMapping')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtsCSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CSVSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystem": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Stage/CSV"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CSVSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtsDwhMapping')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MappingTables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DwhMappingID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "LoadingProcedureName",
						"type": "nvarchar"
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "TableType",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Layer",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "etl",
					"table": "DwhMapping"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtsDwhStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Stage/Dwh"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtsOnPremiseSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremiseSQLSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Stage/OnPremiseSQL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremiseSQLSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtsStageMapping')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MappingTables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DwhMappingID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "LoadingProcedureName",
						"type": "nvarchar"
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "TableType",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Layer",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "etl",
					"table": "StageMapping"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('CSVSource_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('CSVSource_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DWH_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremiseSQLSource_connectionString')]",
					"userName": "[parameters('OnPremiseSQLSource_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremiseSQLSource_password')]"
					}
				},
				"connectVia": {
					"referenceName": "Self-HostedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Self-HostedIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Self-HostedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessModels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessTabularModels",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetModels",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetModels').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ProcessModel",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ProcessModel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DatabaseName": {
												"value": "@item().TabularModel",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetModels",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[etl].[p_GetTabularModels]",
								"storedProcedureParameters": {
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dtsDwhMapping",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure AS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dtsDwhMapping')]",
				"[concat(variables('factoryId'), '/pipelines/ProcessModel')]"
			]
		}
	]
}